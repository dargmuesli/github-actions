name: Docker

on:
  workflow_call:
    inputs:
      CACHE:
        required: false
        type: string
      IS_PUSH_ENABLED:
        default: false
        required: false
        type: boolean
      TARGET:
        default: production
        required: false
        type: string
    secrets:
      DOCKER_HUB_ACCESS_TOKEN:
        required: true
      DOCKER_HUB_USER_NAME:
        required: true

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}

      - name: Docker cache
        uses: dargmuesli/docker-build-cache-config-action@v1.14.0
        id: cache
        with:
          image: ${{ github.repository }}
          tag-prefix: |
            ${{ inputs.TARGET }}_
            ${{ inputs.CACHE && format('{0}_', inputs.CACHE) }}

      - name: Docker Buildx setup
        id: buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # tag=v2.2.1

      - name: Registry login
        if: github.event_name != 'pull_request'
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER_NAME }}" --password-stdin

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            CI=true
          cache-from: ${{ steps.cache.outputs.cache-from }}
          cache-to: ${{ steps.cache.outputs.cache-to }}
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ steps.meta.outputs.tags != '' && inputs.IS_PUSH_ENABLED == true }}
          tags: ${{ steps.meta.outputs.tags }}
          target: ${{ inputs.TARGET }}
