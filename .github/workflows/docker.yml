name: Docker

on:
  workflow_call:
    inputs:
      ARTIFACT_PATH:
        required: false
        type: string
      BUILD_ARGUMENTS_CI:
        required: false
        type: string
      BUILD_ARGUMENTS_RELEASE:
        required: false
        type: string
      BUILD_TARGET_RELEASE:
        default: build
        required: false
        type: string
      CONTEXT:
        required: false
        type: string
      IMAGE_ID:
        required: false
        type: string
      IMAGE_ID_SUFFIX:
        required: false
        type: string
      PLATFORMS:
        default: linux/amd64
        required: false
        type: string
      PUSH:
        default: true
        required: false
        type: boolean
      TAG:
        required: false
        type: string
      REGISTRY:
        default: ghcr.io
        required: false
        type: string
    secrets:
      BUILD_ARGUMENTS_CI:
        required: false

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout git repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # fetch all history for all branches and tags

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        with:
          install: true

      - name: Registry login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ inputs.REGISTRY }}

      - run: |
          IMAGE_ID=${{ inputs.IMAGE_ID || format('{0}/{1}', inputs.REGISTRY, github.repository) }}

          if [ -n "${{ inputs.IMAGE_ID_SUFFIX }}" ]; then
            IMAGE_ID="$IMAGE_ID-${{ inputs.IMAGE_ID_SUFFIX }}"
          fi

          echo "IMAGE_ID=$IMAGE_ID" >> "$GITHUB_ENV"

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5.5.0
        with:
          images: |
            ${{ env.IMAGE_ID }}
          tags: |
            type=schedule
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},value=${{ inputs.TAG }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.TAG }}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/0.') }},value=${{ inputs.TAG }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: ${{ secrets.BUILD_ARGUMENTS_CI }}
          builder: ${{ steps.buildx.outputs.name }}
          # cache-from: ${{ env.IMAGE_ID }}:cache
          # cache-to: ${{ steps.docker_meta.outputs.tags != '' && github.event_name != 'pull_request' && format('{0}:{1}', env.IMAGE_ID, 'cache') || '' }}
          context: ${{ inputs.CONTEXT || '.' }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          platforms: ${{ inputs.PLATFORMS }}
          push: ${{ inputs.PUSH && steps.docker_meta.outputs.tags != '' && github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Build target "${{ inputs.BUILD_TARGET_RELEASE }}"
        if: inputs.ARTIFACT_PATH != ''
        uses: docker/build-push-action@v5
        with:
          build-args: ${{ inputs.BUILD_ARGUMENTS_RELEASE }}
          builder: ${{ steps.buildx.outputs.name }}
          # cache-from: ${{ env.IMAGE_ID }}:cache
          context: ${{ inputs.CONTEXT || '.' }}
          load: true
          push: false
          tags: stage_build
          target: ${{ inputs.BUILD_TARGET_RELEASE }}

      - name: Create artifact
        if: inputs.ARTIFACT_PATH != ''
        run: |
          docker container create --name extract stage_build
          docker container cp extract:/srv/app/${{ inputs.ARTIFACT_PATH }} /tmp/actions/${{ inputs.ARTIFACT_PATH }}
          tar -C /tmp/actions/${{ inputs.ARTIFACT_PATH }} -czvf build-artifact.tar .

      - name: Upload artifact
        if: inputs.ARTIFACT_PATH != ''
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build-artifact.tar
