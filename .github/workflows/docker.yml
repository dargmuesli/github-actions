name: Docker

on:
  workflow_call:
    secrets:
      DOCKER_HUB_ACCESS_TOKEN:
        required: true
      DOCKER_HUB_USER_NAME:
        required: true

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@dcd71f646680f2efd8db4afa5ad64fdcba30e748 # tag=v3.0.1

      - name: Docker Buildx setup
        id: buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # renovate: tag=v1.6.0

      - name: Registry login
        if: github.event_name != 'pull_request'
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER_NAME }}" --password-stdin

      - name: Build
        run: |
          # Strip git ref prefix from version
          IMAGE_ID=${{ github.repository }}
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          # Push the Docker image to the registry on git pushes that either pushed a tag or one of the following branches: [master, develop]
          if [[
            (
              "${{ github.event_name }}" == "release"
              &&
              "${{ startsWith(github.ref, 'refs/tags/') }}" == "true"
            )
            ||
            (
              "${{ github.event_name }}" == "push"
              &&
              "${{ startsWith(github.ref, 'refs/heads/') }}" == "true"
              &&
              (
                $VERSION == "latest"
                ||
                $VERSION == "develop"
              )
            )
          ]]
          then
            docker buildx build \
              --cache-from=$IMAGE_ID:cache \
              --cache-to=$IMAGE_ID:cache \
              --push \
              -t $IMAGE_ID:$VERSION \
              .
          else
            docker buildx build \
              --cache-from=$IMAGE_ID:cache \
              -t $IMAGE_ID:$VERSION \
              .
          fi
