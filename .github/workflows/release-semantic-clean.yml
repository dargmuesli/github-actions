name: 'Release: Semantic'

on:
  workflow_call:
    inputs:
      DRY_RUN:
        default: false
        required: false
        type: boolean
      EXTRA_PLUGINS:
        required: false
        type: string
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true
    outputs:
      new_release_version:
        value: ${{ jobs.semantic-release.outputs.new_release_version }}

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    # semantic-release does not run on pull requests
    if: inputs.DRY_RUN || github.ref_type == 'branch' && contains(fromJSON('["master", "next", "next-major", "beta", "alpha"]'), github.ref_name)
    outputs:
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - name: Checkout git repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          fetch-depth: 0 # fetch all history for all branches and tags
          persist-credentials: false # to make `cycjimmy/semantic-release-action` work on protected branches (prevent "At least 1 approving review is required by reviewers with write access")

      - name: Release
        uses: cycjimmy/semantic-release-action@cb425203a562475bca039ba4dbf90c7f9ac790f4 # v4.1.0
        id: semantic-release
        with:
          dry_run: ${{ inputs.DRY_RUN }}
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            conventional-changelog-conventionalcommits
            ${{ inputs.EXTRA_PLUGINS }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # required to create releases & comments on behalf of a custom user
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Beautify changelog
        if: inputs.DRY_RUN == false && steps.semantic-release.outputs.new_release_published == 'true'
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
