name: 'Release: Semantic'

on:
  workflow_call:
    inputs:
      DRY_RUN:
        default: false
        required: false
        type: boolean
      EXTRA_PLUGINS:
        required: false
        type: string
      PACKAGE_MANAGER:
        default: pnpm
        required: false
        type: string
    secrets:
      NPM_TOKEN:
        required: false
      PERSONAL_ACCESS_TOKEN:
        required: true
    outputs:
      new_release_version:
        value: ${{ jobs.semantic-release.outputs.new_release_version }}

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    # semantic-release does not run on pull requests
    if: inputs.DRY_RUN || github.ref_type == 'branch' && contains(fromJSON('["main", "master", "next", "next-major", "beta", "alpha"]'), github.ref_name)
    outputs:
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - name: Checkout git repository
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          fetch-depth: 0 # fetch all history for all branches and tags
          persist-credentials: false # to make `cycjimmy/semantic-release-action` work on protected branches (prevent "At least 1 approving review is required by reviewers with write access")

      - name: Setup package manager
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: env.NPM_TOKEN != ''
        run: corepack enable

      - name: Install dependencies
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: env.NPM_TOKEN != ''
        run: ${{ inputs.PACKAGE_MANAGER }} install

      - name: Release # TODO: replace with docker stage, ensuring outputs don't break (https://github.com/semantic-release/semantic-release/issues/753, https://github.com/semantic-release/semantic-release/issues/1647)
        uses: cycjimmy/semantic-release-action@cb425203a562475bca039ba4dbf90c7f9ac790f4 # v4.1.0
        id: semantic-release
        with:
          dry_run: ${{ inputs.DRY_RUN }}
          extra_plugins: | # TODO: update conventional-changelog-conventionalcommits to v8 (https://github.com/semantic-release/release-notes-generator/issues/633)
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            conventional-changelog-conventionalcommits@7.0.2
            ${{ inputs.EXTRA_PLUGINS }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # required to create releases & comments on behalf of a custom user
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Beautify changelog
        if: inputs.DRY_RUN == false && steps.semantic-release.outputs.new_release_published == 'true'
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
