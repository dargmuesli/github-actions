name: 'Release: Semantic'

on:
  workflow_call:
    inputs:
      APT_PACKAGES:
        required: false
        type: string
      DRY_RUN:
        default: false
        required: false
        type: boolean
      EXTRA_PLUGINS:
        required: false
        type: string
      PACKAGE_MANAGER:
        default: pnpm
        required: false
        type: string
    secrets:
      NPM_TOKEN:
        required: false
      PERSONAL_ACCESS_TOKEN:
        required: true
    outputs:
      new_release_version:
        value: ${{ jobs.semantic-release.outputs.new_release_version }}

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: inputs.DRY_RUN || github.ref_type == 'branch' && contains(fromJSON('["main", "master", "next", "next-major", "beta", "alpha"]'), github.ref_name) # semantic-release does not run on pull requests, so accounting for `github.head_ref` in addition to `github.ref_name` does not make sense
    outputs:
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - name: Checkout git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # fetch all history for all branches and tags
          persist-credentials: false # to make `cycjimmy/semantic-release-action` work on protected branches (prevent "At least 1 approving review is required by reviewers with write access")

      - uses: awalsh128/cache-apt-pkgs-action@5902b33ae29014e6ca012c5d8025d4346556bd40 # v1.4.3
        if: inputs.APT_PACKAGES != ''
        with:
          packages: ${{ inputs.APT_PACKAGES }}
          version: 1.0

      - name: Setup package manager
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: env.NPM_TOKEN != ''
        run: corepack enable

      - name: Install dependencies
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: env.NPM_TOKEN != ''
        run: ${{ inputs.PACKAGE_MANAGER }} install

      - name: Release # TODO: replace with docker stage, ensuring outputs don't break (https://github.com/semantic-release/semantic-release/issues/753, https://github.com/semantic-release/semantic-release/issues/1647)
        uses: cycjimmy/semantic-release-action@c4a2fa890676fc2db25ad0aacd8ab4a0f1f4c024 # v4.2.1
        id: semantic-release
        with:
          dry_run: ${{ inputs.DRY_RUN }}
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            conventional-changelog-conventionalcommits
            ${{ inputs.EXTRA_PLUGINS }}
          semantic_version: 24.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # required to create releases & comments on behalf of a custom user
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Beautify changelog
        if: inputs.DRY_RUN == false && steps.semantic-release.outputs.new_release_published == 'true'
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
