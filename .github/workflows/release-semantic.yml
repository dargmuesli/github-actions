name: 'Release: Semantic'

on:
  workflow_call:
    inputs:
      CACHE_PATH:
        default: pnpm-lock.yaml
        required: false
        type: string
      DRY_RUN:
        default: false
        required: false
        type: boolean
      NODE_VERSION:
        default: '20.5.1'
        required: false
        type: string
      PACKAGE_MANAGER:
        default: pnpm
        required: false
        type: string
    secrets:
      NPM_TOKEN:
        required: false
      PERSONAL_ACCESS_TOKEN:
        required: true
    outputs:
      new_release_version:
        value: ${{ jobs.semantic-release.outputs.new_release_version }}

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: inputs.DRY_RUN || github.event_name == 'push' && github.ref_type == 'branch' && contains(fromJSON('["master", "next", "next-major", "beta", "alpha"]'), github.ref_name)
    outputs:
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - name: Checkout git repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          persist-credentials: false # to make `cycjimmy/semantic-release-action` work on protected branches (prevent "At least 1 approving review is required by reviewers with write access")

      - name: Setup package manager # node setup must be able to find pnpm
        run: corepack enable

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: ${{ inputs.PACKAGE_MANAGER }}
          cache-dependency-path: ${{ inputs.CACHE_PATH }}
          node-version: ${{ inputs.NODE_VERSION }}

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/', inputs.CACHE_PATH)) }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Release
        uses: cycjimmy/semantic-release-action@61680d0e9b02ff86f5648ade99e01be17f0260a4 # v4.0.0
        id: semantic-release
        with:
          dry_run: ${{ inputs.DRY_RUN }}
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # required to create releases & comments on behalf of a custom user
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Beautify changelog
        if: inputs.DRY_RUN == false && steps.semantic-release.outputs.new_release_published == 'true'
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
