name: 'Release: Semantic'

on:
  workflow_call:
    inputs:
      DRY_RUN:
        default: false
        required: false
        type: boolean
      EXTRA_PLUGINS:
        required: false
        type: string
    secrets:
      NPM_CONFIG:
        required: false
      NPM_TOKEN:
        required: false
      PERSONAL_ACCESS_TOKEN:
        required: true
    outputs:
      new_release_version:
        value: ${{ jobs.semantic-release.outputs.new_release_version }}

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]
    # semantic-release does not run on pull requests
    if: inputs.DRY_RUN || github.ref_type == 'branch' && contains(fromJSON('["main", "master", "next", "next-major", "beta", "alpha"]'), github.ref_name)
    outputs:
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - name: Checkout git repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # fetch all history for all branches and tags
          persist-credentials: false # to make `cycjimmy/semantic-release-action` work on protected branches (prevent "At least 1 approving review is required by reviewers with write access")

      - name: Setup package manager
        run: corepack enable

      - name: Configure npm
        if: secrets.NPM_CONFIG
        run: npm config set -- ${{ secrets.NPM_CONFIG }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
          node-version: ${{ matrix.node }}

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/pnpm-lock.yaml')) }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Release
        id: semantic-release
        run: |
          if [[ "${{ inputs.DRY_RUN }}" == "true" ]]
          then
            pnpm exec semantic-release --dry-run
          else
            pnpm exec semantic-release
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # required to create releases & comments on behalf of a custom user
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Beautify changelog
        if: inputs.DRY_RUN == false && steps.semantic-release.outputs.new_release_published == 'true'
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
